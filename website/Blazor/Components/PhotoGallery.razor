@using website.Services
@inject ImageService ImageService

@if (!_images.Any())
{
    <p class="text-center text-gray-500">No images found in the gallery.</p>
}
else
{
    <div class="columns-1 sm:columns-2 md:columns-3 lg:columns-4 xl:columns-5 gap-3 p-5">
        @foreach (var image in _images)
        {
            <div class="mb-4 break-inside-avoid overflow-hidden relative group cursor-pointer transition-transform duration-300 hover:scale-105" @onclick="() => OpenModal(image.FileName)">
                <img
                    src="@($"/images/thumbs/{image.FileName}")"
                    alt="Gallery Image"
                    loading="lazy"
                    class="w-full h-auto object-cover  "
                />
                <div class="absolute inset-0 bg-black bg-opacity-50 opacity-0 group-hover:opacity-60 transition-opacity duration-300 flex items-center justify-center">
                    <svg class="w-12 h-12 text-white drop-shadow" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM10 7v6m3-3H7" />
                    </svg>
                </div>
            </div>
        }
    </div>

    @if (_isModalOpen && !string.IsNullOrEmpty(_selectedImage))
    {
        <div class="fixed inset-0 bg-black flex items-center justify-center z-50 p-4" @onclick="CloseModal">
            <div class="relative max-w-5xl w-full bg-tr rounded-xl overflow-hidden shadow-xl animate-fade-in" @onclick:stopPropagation>
                <button class="absolute top-4 right-4 text-white bg-black bg-opacity-70 hover:bg-red-600 rounded-full w-10 h-10 flex items-center justify-center z-10" @onclick="CloseModal" aria-label="Close">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
                <div class="flex items-center justify-center min-h-[200px]">
                    <img
                        src="@($"/images/gallery/{_selectedImage}")"
                        alt="Full size image"
                        class="max-w-full max-h-[80vh] object-contain rounded-xl"
                        @onload="() => _imageLoaded = true"
                    />

                    @if (!_imageLoaded)
                    {
                        <div class="absolute inset-0 flex items-center justify-center">
                            <div class="w-12 h-12 border-4 border-white border-t-blue-500 rounded-full animate-spin"></div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
}

@code {
    private List<ImageInfo> _images = new();
    private bool _isModalOpen;
    private string? _selectedImage;
    private bool _imageLoaded;

    protected override async Task OnInitializedAsync()
    {
        _images = await ImageService.GetAllImagesAsync();
    }

    private void OpenModal(string fileName)
    {
        _selectedImage = fileName;
        _isModalOpen = true;
        _imageLoaded = false;
        StateHasChanged();
    }

    private void CloseModal()
    {
        _isModalOpen = false;
        _selectedImage = null;
        _imageLoaded = false;
        StateHasChanged();
    }

    public async Task RefreshImages()
    {
        _images = await ImageService.GetAllImagesAsync();
        StateHasChanged();
    }
}