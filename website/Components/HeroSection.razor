
<section class="relative bg-black min-h-screen flex items-center justify-center overflow-hidden" id="hero-section">
    <!-- Background Pattern -->
    <div class="absolute inset-0 opacity-5">
        <div class="absolute inset-0" style="background-image: radial-gradient(circle at 2px 2px, white 1px, transparent 0); background-size: 80px 80px;"></div>
    </div>

    <!-- Floating Elements Container -->
    <div id="floating-elements" class="absolute inset-0 pointer-events-none">
        @foreach (var element in FloatingElements)
        {
            <div class="floating-element absolute @element.OpacityClass @element.ColorClass" style="top: @element.Top%; left: @element.Left%;">
                <svg class="@element.SizeClass" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    @((MarkupString)element.SvgPath)
                </svg>
            </div>
        }
    </div>

    <div class="relative z-10 text-center px-4 sm:px-6 lg:px-8 max-w-6xl mx-auto">
        <!-- Main Title -->
        <div class="mb-16">
            <h1 class="text-6xl sm:text-7xl lg:text-8xl font-black text-white mb-8 tracking-tight">
                <span class="block font-extralight text-gray-300">Andres</span>
                <span class="block bg-gradient-to-r from-white to-gray-300 bg-clip-text text-transparent">
                    Ravelo
                </span>
            </h1>

            <!-- Interactive Role Buttons -->
            <div class="flex flex-wrap justify-center gap-6 text-lg sm:text-xl font-medium mb-12">
                <a href="/music" class="group flex items-center px-6 py-3 rounded-full border-2 border-gray-600 hover:border-white transition-all duration-300 hover:bg-white/5">
                    <div class="w-10 h-10 mr-4 rounded-full border border-gray-500 group-hover:border-white flex items-center justify-center transition-all duration-300">
                        <svg class="w-5 h-5 text-gray-400 group-hover:text-white transition-colors duration-300" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M18 3a1 1 0 00-1.196-.98l-10 2A1 1 0 006 5v9.114A4.369 4.369 0 005 14c-1.657 0-3 .895-3 2s1.343 2 3 2 3-.895 3-2V7.82l8-1.6v5.894A4.369 4.369 0 0015 12c-1.657 0-3 .895-3 2s1.343 2 3 2 3-.895 3-2V3z"/>
                        </svg>
                    </div>
                    <span class="text-gray-300 group-hover:text-white transition-colors duration-300">Musician</span>
                </a>

                <a href="/developer" class="group flex items-center px-6 py-3 rounded-full border-2 border-gray-600 hover:border-white transition-all duration-300 hover:bg-white/5">
                    <div class="w-10 h-10 mr-4 rounded-full border border-gray-500 group-hover:border-white flex items-center justify-center transition-all duration-300">
                        <svg class="w-5 h-5 text-gray-400 group-hover:text-white transition-colors duration-300" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M12.316 3.051a1 1 0 01.633 1.265l-4 12a1 1 0 11-1.898-.632l4-12a1 1 0 011.265-.633zM5.707 6.293a1 1 0 010 1.414L3.414 10l2.293 2.293a1 1 0 11-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0zm8.586 0a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 11-1.414-1.414L16.586 10l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"/>
                        </svg>
                    </div>
                    <span class="text-gray-300 group-hover:text-white transition-colors duration-300">Developer</span>
                </a>

                <a href="/photography" class="group flex items-center px-6 py-3 rounded-full border-2 border-gray-600 hover:border-white transition-all duration-300 hover:bg-white/5">
                    <div class="w-10 h-10 mr-4 rounded-full border border-gray-500 group-hover:border-white flex items-center justify-center transition-all duration-300">
                        <svg class="w-5 h-5 text-gray-400 group-hover:text-white transition-colors duration-300" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z" clip-rule="evenodd"/>
                        </svg>
                    </div>
                    <span class="text-gray-300 group-hover:text-white transition-colors duration-300">Photographer</span>
                </a>
            </div>
        </div>

        <!-- Description -->
        <p class="text-xl sm:text-2xl text-gray-400 mb-16 max-w-4xl mx-auto leading-relaxed font-light">
            Creative professional blending technology, music, and visual storytelling.<br class="hidden sm:block">
            <span class="text-gray-500">Passionate about building digital experiences, composing melodies, and capturing moments that matter.</span>
        </p>
    </div>

</section>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const heroSection = document.getElementById('hero-section');
    const floatingElements = document.querySelectorAll('.floating-element');

    heroSection.addEventListener('mousemove', function(e) {
        const rect = heroSection.getBoundingClientRect();
        const mouseX = e.clientX - rect.left;
        const mouseY = e.clientY - rect.top;

        floatingElements.forEach(element => {
            const elementRect = element.getBoundingClientRect();
            const elementCenterX = elementRect.left + elementRect.width / 2 - rect.left;
            const elementCenterY = elementRect.top + elementRect.height / 2 - rect.top;

            const distanceX = mouseX - elementCenterX;
            const distanceY = mouseY - elementCenterY;
            const distance = Math.sqrt(distanceX * distanceX + distanceY * distanceY);

            if (distance < 150) {
                const force = (150 - distance) / 150;
                const moveX = -distanceX * force * 0.4;
                const moveY = -distanceY * force * 0.4;

                element.style.transform = `translate(${moveX}px, ${moveY}px)`;
                element.style.transition = 'transform 0.1s ease-out';
            } else {
                element.style.transform = 'translate(0px, 0px)';
                element.style.transition = 'transform 0.8s ease-out';
            }
        });
    });

    heroSection.addEventListener('mouseleave', function() {
        floatingElements.forEach(element => {
            element.style.transform = 'translate(0px, 0px)';
            element.style.transition = 'transform 0.8s ease-out';
        });
    });
});
</script>

<style>
    .floating-element {
        transition: transform 0.8s ease-out;
        will-change: transform;
    }
</style>

@code {
    private int ElementCount = 70;
    private List<FloatingElement> FloatingElements = new();

    protected override void OnInitialized()
    {
        GenerateFloatingElements();
    }

    private void GenerateFloatingElements()
    {
        var random = new Random();
        var svgIcons = GetSvgIcons();
        var sizes = new[] { "w-10 h-10", "w-12 h-12", "w-15 h-15", "w-20 h-20", "w-25 h-25" };
        var opacities = new[] { "opacity-25", "opacity-30", "opacity-35" };
        var colors = new[] { "text-gray-300", "text-gray-400" };

        for (int i = 0; i < ElementCount; i++)
        {
            FloatingElements.Add(new FloatingElement
            {
                Top = random.Next(5, 95),
                Left = random.Next(5, 95),
                SvgPath = svgIcons[random.Next(svgIcons.Count)],
                SizeClass = sizes[random.Next(sizes.Length)],
                OpacityClass = opacities[random.Next(opacities.Length)],
                ColorClass = colors[random.Next(colors.Length)]
            });
        }
    }

    private List<string> GetSvgIcons()
    {
        return new List<string>
        {
            // Code Icons
            @"<path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""1.5"" d=""M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4""/>",
            @"<path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""1.5"" d=""M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z""/>",
            @"<path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""1.5"" d=""M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253""/>",
            @"<path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""1.5"" d=""M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01""/>",

            // Music Icons
            @"<path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""1.5"" d=""M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3""/>",
            @"<path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""1.5"" d=""M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 12.728M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z""/>",
            @"<path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""1.5"" d=""M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z""/>",

            // Camera Icons
            @"<path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""1.5"" d=""M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z""/><path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""1.5"" d=""M15 13a3 3 0 11-6 0 3 3 0 016 0z""/>",
            @"<path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""1.5"" d=""M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z""/>",
            @"<path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""1.5"" d=""M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z""/>",
            @"<path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""1.5"" d=""M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z""/><path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""1.5"" d=""M15 11a3 3 0 11-6 0 3 3 0 016 0z""/>"
        };
    }

    public class FloatingElement
    {
        public int Top { get; set; }
        public int Left { get; set; }
        public string SvgPath { get; set; } = "";
        public string SizeClass { get; set; } = "";
        public string OpacityClass { get; set; } = "";
        public string ColorClass { get; set; } = "";
    }
}