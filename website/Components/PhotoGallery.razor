@inject IWebHostEnvironment Env

@if (!_imagePaths.Any())
{
    <p>No images found in the gallery.</p>
}
else
{
    <div class="masonry-container">
        @foreach (var path in _imagePaths)
        {
            var fileName = Path.GetFileName(path);
            <div class="masonry-item">
                <a href="@($"/images/gallery/{fileName}")"
                   class="glightbox block"
                   data-gallery="gallery1"
                   data-title="@Path.GetFileNameWithoutExtension(path)">
                    <img
                        src="@($"/images/thumbs/{fileName}")"
                        alt="Gallery Image"
                        loading="lazy"
                        class="masonry-image"
                    />
                </a>
            </div>
        }
    </div>
}

<style>
.masonry-container {
    column-count: 1;
    column-gap: 1rem;
    padding: 1rem;
}

.masonry-item {
    display: inline-block;
    width: 100%;
    margin-bottom: 1rem;
    break-inside: avoid;
    page-break-inside: avoid;
    overflow: hidden;
    border-radius: 0.75rem;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    transition: all 0.3s ease;
    background: white;
}

.masonry-item:hover {
    transform: translateY(-4px);
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
}

.masonry-image {
    width: 100%;
    height: auto;
    display: block;
    border-radius: 0.75rem;
    transition: transform 0.3s ease;
}

.masonry-item:hover .masonry-image {
    transform: scale(1.02);
}

/* ðŸ“± Responsive breakpoints */
@@media (min-width: 640px) {
    .masonry-container {
        column-count: 2;
        column-gap: 1.5rem;
        padding: 1.5rem;
    }
}

@@media (min-width: 768px) {
    .masonry-container {
        column-count: 3;
        column-gap: 1.5rem;
    }
}

@@media (min-width: 1024px) {
    .masonry-container {
        column-count: 4;
        column-gap: 2rem;
        padding: 2rem;
    }
}

@@media (min-width: 1280px) {
    .masonry-container {
        column-count: 5;
        column-gap: 2rem;
    }
}

@@media (min-width: 1536px) {
    .masonry-container {
        column-count: 6;
        column-gap: 2.5rem;
        padding: 3rem;
    }
}
</style>

@code {
    private List<string?> _imagePaths = [];

    protected override void OnInitialized()
    {
        var galleryPath = Path.Combine(Env.WebRootPath, "images/gallery");

        if (Directory.Exists(galleryPath))
        {
            _imagePaths = Directory
                .EnumerateFiles(galleryPath)
                .Select(Path.GetFileName)
                .Where(f => f != null && (
                    f.EndsWith(".jpg", StringComparison.OrdinalIgnoreCase) ||
                    f.EndsWith(".png", StringComparison.OrdinalIgnoreCase) ||
                    f.EndsWith(".jpeg", StringComparison.OrdinalIgnoreCase) ||
                    f.EndsWith(".webp", StringComparison.OrdinalIgnoreCase)))
                .ToList();
        }
    }
}