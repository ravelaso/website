@page "/dashboard/images"
@using Microsoft.AspNetCore.Components.Forms
@using website.Services
@layout Layout.DashboardLayout
@inject ImageService ImageService
@rendermode InteractiveServer

<PageTitle>Image Gallery - Dashboard</PageTitle>

<div class="space-y-6">
    <div class="bg-gray-900 rounded-lg border border-gray-800 p-6">
        <h2 class="text-xl font-semibold text-white">Image Gallery Management</h2>
        <p class="text-gray-300">Upload and manage your image gallery</p>
    </div>

    <div class="bg-gray-900 rounded-lg border border-gray-800 p-6">
        <h3 class="text-lg font-medium text-white mb-4">Upload Images</h3>

        <div class="border-2 border-dashed border-gray-700 rounded-lg p-6">
            <InputFile OnChange="HandleFileSelection"
                       multiple
                       accept="image/*"
                       class="block w-full text-sm text-gray-300 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-600 file:text-white hover:file:bg-blue-700" />
        </div>

        @if (_selectedFiles.Any())
        {
            <div class="mt-4 bg-gray-950 border border-gray-800 rounded-lg p-4">
                <h4 class="text-white font-medium mb-3">Selected Files (@_selectedFiles.Count)</h4>
                @foreach (var file in _selectedFiles)
                {
                    <div class="bg-gray-800 rounded px-3 py-2 mb-2">
                        <span class="text-gray-300 text-sm">@file.Name</span>
                        <span class="text-gray-500 text-xs ml-2">(@(file.Size) bytes)</span>
                    </div>
                }

                <div class="mt-4">
                    <button @onclick="UploadFiles" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded text-sm">
                        Upload Files
                    </button>
                </div>
            </div>
        }

        @if (!string.IsNullOrEmpty(_message))
        {
            <div class="mt-4 p-3 rounded bg-green-900 text-green-300">
                @_message
            </div>
        }
    </div>

    <!-- Existing Images Gallery -->
    <div class="bg-gray-900 rounded-lg border border-gray-800 p-6">
        <div class="flex justify-between items-center mb-4">
            <h3 class="text-lg font-medium text-white">Gallery Images (@_existingImages.Count)</h3>
            <button @onclick="RefreshGallery" class="bg-gray-600 hover:bg-gray-700 text-white px-3 py-1 rounded text-sm">
                Refresh
            </button>
        </div>

        @if (_existingImages.Any())
        {
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                @foreach (var image in _existingImages)
                {
                    <div class="bg-gray-800 rounded-lg overflow-hidden">
                        <div class="aspect-video bg-gray-700 flex items-center justify-center">
                            @if (image.HasThumbnail)
                            {
                                <img src="/images/thumbs/@image.FileName"
                                     alt="@image.FileName"
                                     class="max-w-full max-h-full object-contain" />
                            }
                            else
                            {
                                <div class="text-gray-500 text-sm">No thumbnail</div>
                            }
                        </div>

                        <div class="p-4">
                            <h4 class="text-white text-sm font-medium truncate mb-2">@image.FileName</h4>
                            <div class="text-gray-400 text-xs space-y-1">
                                <div>Size: @image.FormattedFileSize</div>
                                <div>Created: @image.CreatedDate.ToString("MMM dd, yyyy")</div>
                            </div>

                            <div class="mt-3 flex gap-2">
                                <a href="/images/gallery/@image.FileName"
                                   target="_blank"
                                   class="bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded text-xs">
                                    View
                                </a>
                                <button @onclick="() => DeleteImage(image.FileName)"
                                        class="bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-xs">
                                    Delete
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="text-center py-8 text-gray-400">
                <p>No images in gallery yet. Upload some images above!</p>
            </div>
        }
    </div>
</div>

@code {
    private List<IBrowserFile> _selectedFiles = new();
    private List<ImageInfo> _existingImages = new();
    private string _message = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await RefreshGallery();
    }

    private void HandleFileSelection(InputFileChangeEventArgs e)
    {
        _selectedFiles = e.GetMultipleFiles(10).ToList();
        _message = string.Empty;
    }

    private async Task UploadFiles()
    {
        try
        {
            foreach (var file in _selectedFiles)
            {
                await ImageService.UploadImageAsync(file);
            }

            _message = "Files uploaded successfully!";
            _selectedFiles.Clear();

            // Refresh gallery to show new images
            await RefreshGallery();
        }
        catch (Exception ex)
        {
            _message = $"Error: {ex.Message}";
        }
    }

    private async Task RefreshGallery()
    {
        _existingImages = await ImageService.GetAllImagesAsync();
        StateHasChanged();
    }

    private async Task DeleteImage(string fileName)
    {
        var success = await ImageService.DeleteImageAsync(fileName);
        if (success)
        {
            _message = $"Image '{fileName}' deleted successfully!";
            await RefreshGallery();
        }
        else
        {
            _message = $"Failed to delete image '{fileName}'";
        }
    }
}